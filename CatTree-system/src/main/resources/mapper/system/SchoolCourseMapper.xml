<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.CatTree.system.mapper.SchoolCourseMapper">

    <resultMap type="SchoolCourse" id="SchoolCourseResult">
        <result property="courseId"    column="course_id"    />
        <result property="courseName"    column="course_name"    />
        <result property="teacherUserId"    column="teacher_user_id"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectSchoolCourseVo">
        select course_id, course_name, teacher_user_id, create_by, create_time, update_by, update_time, remark from school_course
    </sql>

    <select id="selectSchoolCourseList" parameterType="SchoolCourse" resultMap="SchoolCourseResult">
        <include refid="selectSchoolCourseVo"/>
        <where>
            <if test="courseName != null  and courseName != ''"> and course_name like concat('%', #{courseName}, '%')</if>
            <if test="teacherUserId != null "> and teacher_user_id = #{teacherUserId}</if>
        </where>
    </select>

    <select id="selectSchoolCourseByCourseId" parameterType="Long" resultMap="SchoolCourseResult">
        <include refid="selectSchoolCourseVo"/>
        where course_id = #{courseId}
    </select>

    <insert id="insertSchoolCourse" parameterType="SchoolCourse" useGeneratedKeys="true" keyProperty="courseId">
        insert into school_course
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="courseName != null and courseName != ''">course_name,</if>
            <if test="teacherUserId != null">teacher_user_id,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="courseName != null and courseName != ''">#{courseName},</if>
            <if test="teacherUserId != null">#{teacherUserId},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateSchoolCourse" parameterType="SchoolCourse">
        update school_course
        <trim prefix="SET" suffixOverrides=",">
            <if test="courseName != null and courseName != ''">course_name = #{courseName},</if>
            <if test="teacherUserId != null">teacher_user_id = #{teacherUserId},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where course_id = #{courseId}
    </update>

    <delete id="deleteSchoolCourseByCourseId" parameterType="Long">
        delete from school_course where course_id = #{courseId}
    </delete>

    <delete id="deleteSchoolCourseByCourseIds" parameterType="String">
        delete from school_course where course_id in
        <foreach item="courseId" collection="array" open="(" separator="," close=")">
            #{courseId}
        </foreach>
    </delete>
</mapper>
